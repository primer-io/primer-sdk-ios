name: 'Run SDK tests'
description: 'Test the SDK using SPM'
inputs:
  ssh-private-key:
    description: SSH private key
    required: true
  known-hosts:
    description: Known Hosts
    required: true
  match-password:
    description: Match password
    required: true
  match-git-private-key:
    description: Match git private key
    required: true
  fastlane-password:
    description: Fastlane password
    required: true
  fastlane-session:
    description: Fastlane session
    required: true
  fastlane-test-lane:
    description: The fastlane test lane to run
    required: false
    default: test_sdk 
  match-keychain-name:
    description: Match keychain name
    required: true
  match-keychain-password:
    description: Match keychain password
    required: true
  source-branch:
    description: Source branch
    required: true
  sdk-name:
    description: The name of the SDK, if running SDK tests
    required: false
  package-swift:
    description: The swift package file to use, if not default
    required: false

runs:
  using: "composite"
  steps:
    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd # v1.6.0
      with:
        xcode-version: '15.4'
    - name: Install SSH key
      uses: shimataro/ssh-key-action@d4fffb50872869abe2d9a9098a6d9c5aa7d16be4 #v2.7.0
      with:
        key: ${{ inputs.ssh-private-key }}
        name: id_rsa_github_actions
        known_hosts: ${{ inputs.known-hosts }}
    - uses: webfactory/ssh-agent@dc588b651fe13675774614f8e6a936a468676387 # v0.9.0
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}
    - uses: ruby/setup-ruby@d4526a55538b775af234ba4af27118ed6f8f6677  # v1.172.0
      with:
        ruby-version: "3.2"
        bundler-cache: true
    - name: Setup Package.swift
      shell: bash
      if: ${{ inputs.package-swift != '' }}
      run: |
        mv Package.swift Package.swift.orig
        cp "${{ inputs.package-swift }}" Package.swift
    - name: Build SPM App
      shell: bash
      run: |
        bundle exec fastlane ${{ inputs.fastlane-test-lane }}
      env:
        MATCH_PASSWORD: ${{ inputs.match-password }}
        MATCH_GIT_PRIVATE_KEY: ${{ inputs.ssh-private-key }}
        FASTLANE_PASSWORD: ${{ inputs.fastlane-password }}
        FASTLANE_SESSION: ${{ inputs.fastlane-session }}
        MATCH_KEYCHAIN_NAME: ${{ inputs.match-keychain-name }}
        MATCH_KEYCHAIN_PASSWORD: ${{ inputs.match-password }}
        SOURCE_BRANCH: ${{ inputs.source-branch }}
    - name: Prepare coverage reports
      shell: bash
      if: ${{ inputs.sdk-name != '' }}
      run: |
        bash Scripts/xccov-to-sonarqube-generic.sh fastlane/test_output/PrimerSDKTests.xcresult/ > coverage.xml
        sed "s#$PWD/##g" coverage.xml > sonar-coverage-${{ inputs.sdk-name }}.xml
    - uses: actions/upload-artifact@master
      with:
        name: coverage-file-${{ inputs.sdk-name }}
        path: sonar-coverage-${{ inputs.sdk-name }}.xml

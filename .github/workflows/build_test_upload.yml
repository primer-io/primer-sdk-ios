name: Build app

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  danger:
    runs-on: ubuntu-latest
    name: "Run Danger"
    steps:
      - uses: actions/checkout@v1
      - name: Danger
        uses: docker://ghcr.io/danger/danger-swift:3.13.0
        with:
            args: --failOnErrors --no-publish-check --remove-previous-comments
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # - uses: actions/checkout@v1
      # - name: Danger
      #   uses: danger/swift@3.3.0
      #   with:
      #       args: --failOnErrors --no-publish-check
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}

  build-and-upload:
    needs: danger
    runs-on: macos-latest
    timeout-minutes: 15
    name: "Build and upload app"
    steps:
      - name: Cancel previous jobs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - name: Git - Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa_github_actions
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"
          bundler-cache: true

      - name: Create Firebase Service Credentials file
        run: |
          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json.b64
          base64 -d -i firebase_credentials.json.b64 > firebase_credentials.json
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

      - name: Distribute internally on Firebase, Browserstack and Appetize ðŸš€
        run: |
          bundle exec fastlane qa_release
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_COMMA_SEPARATED_TEST_GROUPS: ${{ 'primer-internal' }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          APPETIZE_API_TOKEN: ${{ secrets.APPETIZE_API_TOKEN }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          SOURCE_BRANCH: ${{ github.head_ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Save Browserstack ID
        uses: actions/upload-artifact@v3
        id: save_browserstack_id_step
        with:
          name: browserstack_id
          path: /var/tmp/browserstack_id.txt
          if-no-files-found: error

  test-via-browserstack:
      runs-on: ubuntu-latest
      needs: build-and-upload
      name: "Browserstack test"
      steps:
        - name: Clone and launch Browserstack tests via Appium ðŸ§ª
          run: |
            git clone -b develop https://d4r1091:$GITHUB_TEMP_PATH@github.com/Tino-Primer/primer-mobile-appium.git .
          env:
            GITHUB_TEMP_PATH: ${{ secrets.DARIO_TOKEN_TEMP }}

        - name: Retrieve Browserstack ID
          uses: actions/download-artifact@v3
          with:
            name: browserstack_id
            path: /var/tmp

        - name: Setup node
          uses: actions/setup-node@v1
          with:
            node-version: 18.3.0

        - name: npm Install
          run: npm install

        - name: Run Appium Test
          env:
            BROWSERSTACK_USERNAME: ${{secrets.BROWSERSTACK_USERNAME}}
            BROWSERSTACK_ACCESS_KEY: ${{secrets.BROWSERSTACK_ACCESS_KEY}}
          run: |
            export BROWSERSTACK_APP_ID=$(cat /var/tmp/browserstack_id.txt)
            echo $BROWSERSTACK_APP_ID
            npx wdio config/wdio.ios.bs.conf.js

  pod-lint:
    needs: test-via-browserstack
    runs-on: macos-latest
    name: "Pod lint"
    steps:
      - uses: actions/checkout@v1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"
          bundler-cache: true

      - name: Lint pod
        run: |
          set -eo pipefail
          export LIB_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          pod lib lint --allow-warnings
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

import SwiftUI

struct <%= options.className %> {
<% properties.forEach(function(prop) { %>
  let <%= prop.name %>: String = "<%= prop.value %>"
<% }); %>

  // Computed properties for colors with light and dark variants
<% properties.filter(function(prop) { return prop.attributes.type === 'color'; }).forEach(function(prop) { %>
  func color<%= prop.name.replace(/^primerColor/, '') %>(for colorScheme: ColorScheme) -> Color {
    switch colorScheme {
    case .dark:
      return Color(hex: <%= prop.name %>Dark ?? <%= prop.name %>)
    default:
      return Color(hex: <%= prop.name %>)
    }
  }
<% }); %>

  // Non-color properties remain the same
<% properties.filter(function(prop) { return prop.attributes.type !== 'color'; }).forEach(function(prop) { %>
  var <%= prop.name.replace(/^primer/, '') %>: String { <%= prop.name %> }
<% }); %>
}